function [fitnessNeg, fitness1D_LDNeg, fitness1_5D_LDNeg, fitness2D_LDNeg, fitness1D_LWDNeg, fitness1_5D_LWDNeg, fitness2D_LWDNeg, fitness1D_LRDNeg,...
    fitness1_5D_LRDNeg, fitness2D_LRDNeg, fitness1D_LSNeg, fitness1_5D_LSNeg, fitness2D_LSNeg, difference1DNeg, difference1D_RTNeg, difference2DNeg, distances1DNeg,...
    distances2DNeg, simulatedEvents1DNeg, simulatedEvents2DNeg, simulatedEvents1D_RTNeg, targetEvents1DNeg, targetEvents1D_RTNeg,...
    targetEvents2DNeg] = negativeFitness(fitnessFunc, dimension, V, targetEventsNeg, noiseProperties, lengthRatio, searchParameters,...
    classificationParameters, waveform, parallelCores)

filtr.state = 'off';
simulatedEventsNeg = detectMinis(-V, noiseProperties.excludedTimes, searchParameters, filtr, waveform, parallelCores);
simulatedEventsNeg(:, [1,4,5,19:21]) = -simulatedEventsNeg(:, [1,4,5,19:21]);
[simulatedEvents1DNeg, simulatedEvents1D_RTNeg, simulatedEvents2DNeg] = classifyMinisNeg(simulatedEventsNeg(:,4), simulatedEventsNeg(:,12),...
    classificationParameters);
simulatedEvents1DNeg = lengthRatio*simulatedEvents1DNeg;
simulatedEvents2DNeg = lengthRatio*simulatedEvents2DNeg;
simulatedEvents1D_RTNeg = lengthRatio*simulatedEvents1D_RTNeg;

[targetEvents1DNeg, targetEvents1D_RTNeg, targetEvents2DNeg] = classifyMinisNeg(targetEventsNeg(:,4), targetEventsNeg(:,12), classificationParameters);

[fitnessNeg, fitness1D_LDNeg, fitness1_5D_LDNeg, fitness2D_LDNeg, fitness1D_LWDNeg, fitness1_5D_LWDNeg, fitness2D_LWDNeg, fitness1D_LRDNeg, fitness1_5D_LRDNeg,...
    fitness2D_LRDNeg, fitness1D_LSNeg, fitness1_5D_LSNeg, fitness2D_LSNeg, difference1DNeg, difference1D_RTNeg, difference2DNeg, distances1DNeg,...
    distances2DNeg] = fitnessEval(targetEvents1DNeg, simulatedEvents1DNeg, targetEvents1D_RTNeg, simulatedEvents1D_RTNeg, targetEvents2DNeg,...
    simulatedEvents2DNeg, fitnessFunc, dimension);
end